//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


var fib_seq = [1,2]; // declare an array for the Fibonacci sequence containing the first two numbers

var get_fib = function() {
	fib_seq[fib_seq.length] = (fib_seq[fib_seq.length - 2]) + (fib_seq[fib_seq.length - 1])
}	// a function for for finding the next number in the sequence and adding it

var evenSum = 2;	// declare a variable for what we're looking for, the first even number (2) is included

while(fib_seq[fib_seq.length - 1] < 4000000) {
	get_fib();	// while loop for adding numbers to the sequence while the last number doesn't exceed 4000000
  if(fib_seq[fib_seq.length - 1] % 2 === 0) {
  	evenSum += fib_seq[fib_seq.length - 1];		// if statement checking if the added number is even (divisible by 2), if it is, add its value to the sum
    }
};

console.log(evenSum);	// return the final result to the console